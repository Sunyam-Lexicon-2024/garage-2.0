@model VehicleIndexViewModel

@{
    ViewBag.Title = "Vehicles";
}

@if (Model.Alert is not null && Model.Alert.IsActive)
{
    switch (Model.Alert.Type)
    {
        case AlertType.Success:
            <div class="alert alert-success">@Model.Alert.Message</div>
            break;
        case AlertType.Danger:
            <div class="alert alert-danger">@Model.Alert.Message</div>
            break;
    }
}

<div class="form-control mb-3">
    <form asp-controller="Vehicle" asp-action="Index" method="get">
        <label asp-for="@Model.SelectedVehicleType">Vehicle Type</label>
        <div class="col-md-2 form-group d-flex flex-column justify-content-center align-items-center">
            <select asp-for="@Model.SelectedVehicleType" asp-items="@Model.VehicleTypes" onchange="this.form.submit()" class="form-control"></select>
        </div>
    </form>
    <form asp-controller="Vehicle" asp-action="Index" method="get">
        <div class="form-group mt-2 d-flex">
            <div class=" d-flex">
                <input class="form-control" asp-for="@Model.RegNumber" placeholder="Enter Vehicle Reg#" />
                <div class="px-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
</div>
        <h3 class="mb-3">@ViewBag.Title</h3>
        @if (!Model.ParkedVehicles.Any())
        {
            <p>No search results</p>
        }
        else
        {
            <table class="table table-striped hover cell-border display compact" id="vehicle-table">
                <thead class="table-light">
                    <th>@Html.DisplayNameFor(model => model.ParkedVehicles.First().RegistrationNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.ParkedVehicles.First().Type)</th>
                    <th>@Html.DisplayNameFor(model => model.ParkedVehicles.First().Brand)</th>
                    <th>@Html.DisplayNameFor(model => model.ParkedVehicles.First().RegisteredAt)</th>
                    <th>@Html.DisplayNameFor(model => model.ParkedVehicles.First().Color)</th>
                    <th>@Html.DisplayNameFor(model => model.ParkedVehicles.First().ParkingSpotIds)</th>
                    <th></th>
                    <th></th>
                </thead>
                <tbody>
                    @foreach (var vehicle in Model.ParkedVehicles)
                    {
                        <tr>
                            <td>@vehicle.RegistrationNumber</td>
                            <td>@vehicle.Type</td>
                            <td>@vehicle.Brand</td>
                            <td>@vehicle.RegisteredAt</td>
                            <td>@vehicle.Color</td>
                            <td>@vehicle.ParkingSpotIds</td>
                            <td>
                                <a asp-controller="Vehicle" asp-action="Details" asp-route-id="@vehicle.Id">Details</a>
                            </td>
                            <td>
                                <a asp-controller="Vehicle" asp-action="Checkout" asp-route-id="@vehicle.Id">Checkout</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

@section Scripts {
    <script>
       let table = new DataTable("#vehicle-table",
        {
            dom: '<"top"i>rt<"bottom-wrapper"<"bottom-left"l><"bottom-right"p>><"clear">', // https://datatables.net/reference/option/dom
            columns: [
                { data : "RegistrationNumber"},
                { data : "Type"},
                { data : "Brand"},
                { data : "RegisteredAt"},
                { 
                    data: "color",
                    render: function(data, type) {
                        let color = "black";
                        if(type == "display") {
                            if(data == "Yellow") {
                                color = "rgb(245, 170, 0)";
                            }else {
                                color = data;
                            }
                        }
                        return `<span style="color:${color}">${data}</span>`;
                    }
                },
                { data : "ParkingSpotIds"},
                { data : "Edit"},
                { data : "Details"},
            ],
            responsive: true,
            columnDefs: 
            [
            { orderable: false, targets: [6,7]} 
            ],
            responsive: true,
            initComplete: function () {
                this.api()
                .columns([0,1,2,3,4,5])
                .every(function () {
                    let column = this;
                    let input = document.createElement("input");
                    input.placeholder = "Search";
                    column.header().appendChild(input);

                    column.header().style.textAlign = "start";
                    input.style.display = "flex";
                    input.style.flexFlow = "column";

                    input.addEventListener("keyup", () => {
                        if (column.search() !== this.value) {
                            column.search(input.value).draw();
                        }
                    });
                });
            }
        });
        
    </script>
}

@section Styles {
<style>
    #vehicle-table_wrapper  {
        label {
            margin-left: 0.5rem;
        }
        .bottom-wrapper {
            display: grid;
            width: 100%;
            justify-content: stretch;
            grid-auto-flow: column;
        .bottom-right {
            display: flex;
            justify-content: flex-end;
        }
        }
        
    }
</style>
}